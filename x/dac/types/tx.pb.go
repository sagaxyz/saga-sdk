// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sagaevm/dac/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgAddAdmins struct {
	Sender string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Admins []string `protobuf:"bytes,2,rep,name=admins,proto3" json:"admins,omitempty"`
}

func (m *MsgAddAdmins) Reset()         { *m = MsgAddAdmins{} }
func (m *MsgAddAdmins) String() string { return proto.CompactTextString(m) }
func (*MsgAddAdmins) ProtoMessage()    {}
func (*MsgAddAdmins) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{0}
}
func (m *MsgAddAdmins) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAdmins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAdmins.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAdmins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAdmins.Merge(m, src)
}
func (m *MsgAddAdmins) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAdmins) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAdmins.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAdmins proto.InternalMessageInfo

func (m *MsgAddAdmins) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgAddAdmins) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

type MsgAddAdminsResponse struct {
}

func (m *MsgAddAdminsResponse) Reset()         { *m = MsgAddAdminsResponse{} }
func (m *MsgAddAdminsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddAdminsResponse) ProtoMessage()    {}
func (*MsgAddAdminsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{1}
}
func (m *MsgAddAdminsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAdminsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAdminsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAdminsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAdminsResponse.Merge(m, src)
}
func (m *MsgAddAdminsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAdminsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAdminsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAdminsResponse proto.InternalMessageInfo

type MsgRemoveAdmins struct {
	Sender string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Admins []string `protobuf:"bytes,2,rep,name=admins,proto3" json:"admins,omitempty"`
}

func (m *MsgRemoveAdmins) Reset()         { *m = MsgRemoveAdmins{} }
func (m *MsgRemoveAdmins) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAdmins) ProtoMessage()    {}
func (*MsgRemoveAdmins) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{2}
}
func (m *MsgRemoveAdmins) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAdmins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAdmins.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAdmins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAdmins.Merge(m, src)
}
func (m *MsgRemoveAdmins) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAdmins) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAdmins.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAdmins proto.InternalMessageInfo

func (m *MsgRemoveAdmins) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRemoveAdmins) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

type MsgRemoveAdminsResponse struct {
}

func (m *MsgRemoveAdminsResponse) Reset()         { *m = MsgRemoveAdminsResponse{} }
func (m *MsgRemoveAdminsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAdminsResponse) ProtoMessage()    {}
func (*MsgRemoveAdminsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{3}
}
func (m *MsgRemoveAdminsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAdminsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAdminsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAdminsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAdminsResponse.Merge(m, src)
}
func (m *MsgRemoveAdminsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAdminsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAdminsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAdminsResponse proto.InternalMessageInfo

type MsgAddAllowed struct {
	Sender  string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Allowed []string `protobuf:"bytes,2,rep,name=allowed,proto3" json:"allowed,omitempty"`
}

func (m *MsgAddAllowed) Reset()         { *m = MsgAddAllowed{} }
func (m *MsgAddAllowed) String() string { return proto.CompactTextString(m) }
func (*MsgAddAllowed) ProtoMessage()    {}
func (*MsgAddAllowed) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{4}
}
func (m *MsgAddAllowed) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAllowed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAllowed.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAllowed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAllowed.Merge(m, src)
}
func (m *MsgAddAllowed) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAllowed) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAllowed.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAllowed proto.InternalMessageInfo

func (m *MsgAddAllowed) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgAddAllowed) GetAllowed() []string {
	if m != nil {
		return m.Allowed
	}
	return nil
}

type MsgAddAllowedResponse struct {
}

func (m *MsgAddAllowedResponse) Reset()         { *m = MsgAddAllowedResponse{} }
func (m *MsgAddAllowedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddAllowedResponse) ProtoMessage()    {}
func (*MsgAddAllowedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{5}
}
func (m *MsgAddAllowedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAllowedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAllowedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAllowedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAllowedResponse.Merge(m, src)
}
func (m *MsgAddAllowedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAllowedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAllowedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAllowedResponse proto.InternalMessageInfo

type MsgRemoveAllowed struct {
	Sender  string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Allowed []string `protobuf:"bytes,2,rep,name=allowed,proto3" json:"allowed,omitempty"`
}

func (m *MsgRemoveAllowed) Reset()         { *m = MsgRemoveAllowed{} }
func (m *MsgRemoveAllowed) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAllowed) ProtoMessage()    {}
func (*MsgRemoveAllowed) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{6}
}
func (m *MsgRemoveAllowed) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAllowed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAllowed.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAllowed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAllowed.Merge(m, src)
}
func (m *MsgRemoveAllowed) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAllowed) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAllowed.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAllowed proto.InternalMessageInfo

func (m *MsgRemoveAllowed) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRemoveAllowed) GetAllowed() []string {
	if m != nil {
		return m.Allowed
	}
	return nil
}

type MsgRemoveAllowedResponse struct {
}

func (m *MsgRemoveAllowedResponse) Reset()         { *m = MsgRemoveAllowedResponse{} }
func (m *MsgRemoveAllowedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAllowedResponse) ProtoMessage()    {}
func (*MsgRemoveAllowedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{7}
}
func (m *MsgRemoveAllowedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAllowedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAllowedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAllowedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAllowedResponse.Merge(m, src)
}
func (m *MsgRemoveAllowedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAllowedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAllowedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAllowedResponse proto.InternalMessageInfo

type MsgEnable struct {
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *MsgEnable) Reset()         { *m = MsgEnable{} }
func (m *MsgEnable) String() string { return proto.CompactTextString(m) }
func (*MsgEnable) ProtoMessage()    {}
func (*MsgEnable) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{8}
}
func (m *MsgEnable) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnable.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnable.Merge(m, src)
}
func (m *MsgEnable) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnable) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnable.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnable proto.InternalMessageInfo

func (m *MsgEnable) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

type MsgEnableResponse struct {
}

func (m *MsgEnableResponse) Reset()         { *m = MsgEnableResponse{} }
func (m *MsgEnableResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEnableResponse) ProtoMessage()    {}
func (*MsgEnableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{9}
}
func (m *MsgEnableResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnableResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnableResponse.Merge(m, src)
}
func (m *MsgEnableResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnableResponse proto.InternalMessageInfo

type MsgDisable struct {
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *MsgDisable) Reset()         { *m = MsgDisable{} }
func (m *MsgDisable) String() string { return proto.CompactTextString(m) }
func (*MsgDisable) ProtoMessage()    {}
func (*MsgDisable) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{10}
}
func (m *MsgDisable) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisable.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisable.Merge(m, src)
}
func (m *MsgDisable) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisable) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisable.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisable proto.InternalMessageInfo

func (m *MsgDisable) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

type MsgDisableResponse struct {
}

func (m *MsgDisableResponse) Reset()         { *m = MsgDisableResponse{} }
func (m *MsgDisableResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDisableResponse) ProtoMessage()    {}
func (*MsgDisableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_393eda5d7902d4ca, []int{11}
}
func (m *MsgDisableResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisableResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisableResponse.Merge(m, src)
}
func (m *MsgDisableResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisableResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAddAdmins)(nil), "sagaevm.dac.v1.MsgAddAdmins")
	proto.RegisterType((*MsgAddAdminsResponse)(nil), "sagaevm.dac.v1.MsgAddAdminsResponse")
	proto.RegisterType((*MsgRemoveAdmins)(nil), "sagaevm.dac.v1.MsgRemoveAdmins")
	proto.RegisterType((*MsgRemoveAdminsResponse)(nil), "sagaevm.dac.v1.MsgRemoveAdminsResponse")
	proto.RegisterType((*MsgAddAllowed)(nil), "sagaevm.dac.v1.MsgAddAllowed")
	proto.RegisterType((*MsgAddAllowedResponse)(nil), "sagaevm.dac.v1.MsgAddAllowedResponse")
	proto.RegisterType((*MsgRemoveAllowed)(nil), "sagaevm.dac.v1.MsgRemoveAllowed")
	proto.RegisterType((*MsgRemoveAllowedResponse)(nil), "sagaevm.dac.v1.MsgRemoveAllowedResponse")
	proto.RegisterType((*MsgEnable)(nil), "sagaevm.dac.v1.MsgEnable")
	proto.RegisterType((*MsgEnableResponse)(nil), "sagaevm.dac.v1.MsgEnableResponse")
	proto.RegisterType((*MsgDisable)(nil), "sagaevm.dac.v1.MsgDisable")
	proto.RegisterType((*MsgDisableResponse)(nil), "sagaevm.dac.v1.MsgDisableResponse")
}

func init() { proto.RegisterFile("sagaevm/dac/v1/tx.proto", fileDescriptor_393eda5d7902d4ca) }

var fileDescriptor_393eda5d7902d4ca = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x9b, 0x4d, 0x74, 0xea, 0xab, 0x8d, 0x3f, 0x66, 0xac, 0xad, 0xe9, 0xb2, 0x2c, 0x6c,
	0x50, 0x2e, 0x89, 0x06, 0x17, 0x4e, 0x48, 0x85, 0x71, 0xcc, 0xa5, 0x47, 0x2e, 0xc8, 0xad, 0x2d,
	0x13, 0xa9, 0x89, 0xab, 0x3a, 0x84, 0x6e, 0xc7, 0xf1, 0x05, 0x90, 0xf8, 0x52, 0x1c, 0x27, 0x71,
	0xe1, 0x84, 0x50, 0xcb, 0x07, 0x41, 0xb3, 0x5d, 0x37, 0x1d, 0x49, 0x27, 0x76, 0x74, 0x9e, 0xe7,
	0xfd, 0x3d, 0xaf, 0xe5, 0x47, 0x81, 0xa6, 0x24, 0x9c, 0xb0, 0x3c, 0x09, 0x29, 0x19, 0x86, 0xf9,
	0x49, 0x98, 0x4d, 0x83, 0xf1, 0x44, 0x64, 0x02, 0xdd, 0x35, 0x42, 0x40, 0xc9, 0x30, 0xc8, 0x4f,
	0x70, 0x87, 0x0b, 0xc1, 0x47, 0x2c, 0x24, 0xe3, 0x38, 0x24, 0x69, 0x2a, 0x32, 0x92, 0xc5, 0x22,
	0x95, 0xda, 0xed, 0xbf, 0x86, 0xed, 0x48, 0xf2, 0x1e, 0xa5, 0x3d, 0x9a, 0xc4, 0xa9, 0x44, 0x7b,
	0x50, 0x97, 0x2c, 0xa5, 0x6c, 0xd2, 0x72, 0x3c, 0xa7, 0xdb, 0xe8, 0x9b, 0xd3, 0xd5, 0x77, 0xa2,
	0x1c, 0xad, 0x0d, 0x6f, 0xf3, 0xea, 0xbb, 0x3e, 0xf9, 0x7b, 0xb0, 0x5b, 0x9c, 0xef, 0x33, 0x39,
	0x16, 0xa9, 0x64, 0x7e, 0x0f, 0xee, 0x45, 0x92, 0xf7, 0x59, 0x22, 0x72, 0x76, 0x4b, 0x74, 0x1b,
	0x9a, 0xd7, 0x10, 0x05, 0xfa, 0x8e, 0x49, 0x1d, 0x8d, 0xc4, 0x67, 0x46, 0x2b, 0xd9, 0x2d, 0xd8,
	0x22, 0xda, 0x62, 0xe0, 0x8b, 0xa3, 0xdf, 0x84, 0x47, 0x2b, 0x08, 0xcb, 0x3e, 0x85, 0xfb, 0xcb,
	0xd8, 0x5b, 0xe3, 0x31, 0xb4, 0xae, 0x53, 0x6c, 0xc2, 0x13, 0x68, 0x44, 0x92, 0xbf, 0x4b, 0xc9,
	0x60, 0xc4, 0xaa, 0xd0, 0xfe, 0x43, 0x78, 0x60, 0x4d, 0x76, 0xf2, 0x08, 0x20, 0x92, 0xfc, 0x34,
	0x96, 0x6b, 0x47, 0x77, 0x01, 0x2d, 0x5d, 0x8b, 0xd9, 0x17, 0xbf, 0xee, 0xc0, 0x66, 0x24, 0x39,
	0xca, 0xa1, 0xb1, 0x7c, 0xee, 0x4e, 0xb0, 0xda, 0x96, 0xa0, 0xf8, 0x98, 0xf8, 0x68, 0x9d, 0x6a,
	0x97, 0x3a, 0xbe, 0xf8, 0xf1, 0xe7, 0xdb, 0xc6, 0x01, 0xda, 0x0f, 0xff, 0xa9, 0x64, 0x48, 0x28,
	0xfd, 0xa0, 0x9f, 0x13, 0x5d, 0x38, 0xb0, 0xbd, 0xd2, 0x87, 0x83, 0x12, 0x7a, 0xd1, 0x80, 0x9f,
	0xdd, 0x60, 0xb0, 0x1b, 0x74, 0xd5, 0x06, 0x3e, 0xf2, 0x4a, 0x36, 0x98, 0xa8, 0x81, 0xc5, 0x12,
	0xe7, 0x00, 0x85, 0xd6, 0xec, 0x57, 0xdc, 0x4f, 0xcb, 0xf8, 0x78, 0xad, 0x6c, 0xd3, 0x9f, 0xaa,
	0x74, 0x0f, 0xb9, 0x55, 0xf7, 0x37, 0x69, 0x5f, 0x1c, 0xd8, 0x59, 0xad, 0x95, 0x57, 0x7d, 0x41,
	0xb3, 0x42, 0xf7, 0x26, 0xc7, 0x7f, 0x6f, 0x11, 0x43, 0xdd, 0x34, 0xaf, 0x5d, 0xc2, 0xd6, 0x12,
	0x3e, 0xac, 0x94, 0x6c, 0xde, 0xa1, 0xca, 0x7b, 0x8c, 0xda, 0x25, 0x79, 0x4c, 0x07, 0x24, 0xb0,
	0xb5, 0xa8, 0x2a, 0x2e, 0x01, 0x1a, 0x0d, 0xfb, 0xd5, 0x9a, 0x4d, 0xf3, 0x55, 0x5a, 0x07, 0xe1,
	0x92, 0x34, 0xaa, 0xbd, 0x6f, 0xde, 0x7e, 0x9f, 0xb9, 0xce, 0xe5, 0xcc, 0x75, 0x7e, 0xcf, 0x5c,
	0xe7, 0xeb, 0xdc, 0xad, 0x5d, 0xce, 0xdd, 0xda, 0xcf, 0xb9, 0x5b, 0x7b, 0xff, 0x9c, 0xc7, 0xd9,
	0xc7, 0x4f, 0x83, 0x60, 0x28, 0x12, 0x35, 0x3f, 0x3d, 0x3b, 0xb7, 0x9c, 0xfc, 0x55, 0x38, 0x55,
	0xb0, 0xec, 0x6c, 0xcc, 0xe4, 0xa0, 0xae, 0x7e, 0x8b, 0x2f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x5e, 0xdf, 0xe9, 0x24, 0x5f, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// AddAdmins adds addresses to the admin list.
	AddAdmins(ctx context.Context, in *MsgAddAdmins, opts ...grpc.CallOption) (*MsgAddAdminsResponse, error)
	// RemoveAdmins removes addresses from the admin list.
	RemoveAdmins(ctx context.Context, in *MsgRemoveAdmins, opts ...grpc.CallOption) (*MsgRemoveAdminsResponse, error)
	// AddAllowed adds addresses to the allowed list.
	AddAllowed(ctx context.Context, in *MsgAddAllowed, opts ...grpc.CallOption) (*MsgAddAllowedResponse, error)
	// RemoveAllowed removes addresses from the allowed list.
	RemoveAllowed(ctx context.Context, in *MsgRemoveAllowed, opts ...grpc.CallOption) (*MsgRemoveAllowedResponse, error)
	// Enable enables the access control based on the allowed list.
	Enable(ctx context.Context, in *MsgEnable, opts ...grpc.CallOption) (*MsgEnableResponse, error)
	// Disable disables the access control based on the allowed list.
	Disable(ctx context.Context, in *MsgDisable, opts ...grpc.CallOption) (*MsgDisableResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AddAdmins(ctx context.Context, in *MsgAddAdmins, opts ...grpc.CallOption) (*MsgAddAdminsResponse, error) {
	out := new(MsgAddAdminsResponse)
	err := c.cc.Invoke(ctx, "/sagaevm.dac.v1.Msg/AddAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveAdmins(ctx context.Context, in *MsgRemoveAdmins, opts ...grpc.CallOption) (*MsgRemoveAdminsResponse, error) {
	out := new(MsgRemoveAdminsResponse)
	err := c.cc.Invoke(ctx, "/sagaevm.dac.v1.Msg/RemoveAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddAllowed(ctx context.Context, in *MsgAddAllowed, opts ...grpc.CallOption) (*MsgAddAllowedResponse, error) {
	out := new(MsgAddAllowedResponse)
	err := c.cc.Invoke(ctx, "/sagaevm.dac.v1.Msg/AddAllowed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveAllowed(ctx context.Context, in *MsgRemoveAllowed, opts ...grpc.CallOption) (*MsgRemoveAllowedResponse, error) {
	out := new(MsgRemoveAllowedResponse)
	err := c.cc.Invoke(ctx, "/sagaevm.dac.v1.Msg/RemoveAllowed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Enable(ctx context.Context, in *MsgEnable, opts ...grpc.CallOption) (*MsgEnableResponse, error) {
	out := new(MsgEnableResponse)
	err := c.cc.Invoke(ctx, "/sagaevm.dac.v1.Msg/Enable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Disable(ctx context.Context, in *MsgDisable, opts ...grpc.CallOption) (*MsgDisableResponse, error) {
	out := new(MsgDisableResponse)
	err := c.cc.Invoke(ctx, "/sagaevm.dac.v1.Msg/Disable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// AddAdmins adds addresses to the admin list.
	AddAdmins(context.Context, *MsgAddAdmins) (*MsgAddAdminsResponse, error)
	// RemoveAdmins removes addresses from the admin list.
	RemoveAdmins(context.Context, *MsgRemoveAdmins) (*MsgRemoveAdminsResponse, error)
	// AddAllowed adds addresses to the allowed list.
	AddAllowed(context.Context, *MsgAddAllowed) (*MsgAddAllowedResponse, error)
	// RemoveAllowed removes addresses from the allowed list.
	RemoveAllowed(context.Context, *MsgRemoveAllowed) (*MsgRemoveAllowedResponse, error)
	// Enable enables the access control based on the allowed list.
	Enable(context.Context, *MsgEnable) (*MsgEnableResponse, error)
	// Disable disables the access control based on the allowed list.
	Disable(context.Context, *MsgDisable) (*MsgDisableResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AddAdmins(ctx context.Context, req *MsgAddAdmins) (*MsgAddAdminsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAdmins not implemented")
}
func (*UnimplementedMsgServer) RemoveAdmins(ctx context.Context, req *MsgRemoveAdmins) (*MsgRemoveAdminsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAdmins not implemented")
}
func (*UnimplementedMsgServer) AddAllowed(ctx context.Context, req *MsgAddAllowed) (*MsgAddAllowedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAllowed not implemented")
}
func (*UnimplementedMsgServer) RemoveAllowed(ctx context.Context, req *MsgRemoveAllowed) (*MsgRemoveAllowedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAllowed not implemented")
}
func (*UnimplementedMsgServer) Enable(ctx context.Context, req *MsgEnable) (*MsgEnableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enable not implemented")
}
func (*UnimplementedMsgServer) Disable(ctx context.Context, req *MsgDisable) (*MsgDisableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disable not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AddAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddAdmins)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagaevm.dac.v1.Msg/AddAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddAdmins(ctx, req.(*MsgAddAdmins))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveAdmins)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagaevm.dac.v1.Msg/RemoveAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveAdmins(ctx, req.(*MsgRemoveAdmins))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddAllowed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddAllowed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddAllowed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagaevm.dac.v1.Msg/AddAllowed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddAllowed(ctx, req.(*MsgAddAllowed))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveAllowed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveAllowed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveAllowed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagaevm.dac.v1.Msg/RemoveAllowed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveAllowed(ctx, req.(*MsgRemoveAllowed))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Enable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEnable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Enable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagaevm.dac.v1.Msg/Enable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Enable(ctx, req.(*MsgEnable))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Disable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDisable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Disable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagaevm.dac.v1.Msg/Disable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Disable(ctx, req.(*MsgDisable))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sagaevm.dac.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAdmins",
			Handler:    _Msg_AddAdmins_Handler,
		},
		{
			MethodName: "RemoveAdmins",
			Handler:    _Msg_RemoveAdmins_Handler,
		},
		{
			MethodName: "AddAllowed",
			Handler:    _Msg_AddAllowed_Handler,
		},
		{
			MethodName: "RemoveAllowed",
			Handler:    _Msg_RemoveAllowed_Handler,
		},
		{
			MethodName: "Enable",
			Handler:    _Msg_Enable_Handler,
		},
		{
			MethodName: "Disable",
			Handler:    _Msg_Disable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sagaevm/dac/v1/tx.proto",
}

func (m *MsgAddAdmins) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAdmins) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAdmins) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Admins) > 0 {
		for iNdEx := len(m.Admins) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Admins[iNdEx])
			copy(dAtA[i:], m.Admins[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Admins[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddAdminsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAdminsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAdminsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAdmins) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAdmins) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAdmins) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Admins) > 0 {
		for iNdEx := len(m.Admins) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Admins[iNdEx])
			copy(dAtA[i:], m.Admins[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Admins[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAdminsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAdminsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAdminsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddAllowed) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAllowed) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAllowed) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Allowed) > 0 {
		for iNdEx := len(m.Allowed) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Allowed[iNdEx])
			copy(dAtA[i:], m.Allowed[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Allowed[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddAllowedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAllowedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAllowedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAllowed) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAllowed) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAllowed) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Allowed) > 0 {
		for iNdEx := len(m.Allowed) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Allowed[iNdEx])
			copy(dAtA[i:], m.Allowed[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Allowed[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAllowedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAllowedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAllowedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEnable) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEnableResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnableResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnableResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDisable) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDisableResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisableResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisableResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAddAdmins) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Admins) > 0 {
		for _, s := range m.Admins {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddAdminsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveAdmins) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Admins) > 0 {
		for _, s := range m.Admins {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRemoveAdminsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddAllowed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Allowed) > 0 {
		for _, s := range m.Allowed {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddAllowedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveAllowed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Allowed) > 0 {
		for _, s := range m.Allowed {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRemoveAllowedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEnable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEnableResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDisable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDisableResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAddAdmins) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAdmins: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAdmins: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admins", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admins = append(m.Admins, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAdminsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAdminsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAdminsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAdmins) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAdmins: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAdmins: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admins", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admins = append(m.Admins, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAdminsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAdminsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAdminsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAllowed) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAllowed: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAllowed: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allowed", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Allowed = append(m.Allowed, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAllowedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAllowedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAllowedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAllowed) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAllowed: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAllowed: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allowed", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Allowed = append(m.Allowed, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAllowedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAllowedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAllowedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnable) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnable: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnable: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnableResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnableResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnableResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisable) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisable: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisable: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisableResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisableResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisableResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
