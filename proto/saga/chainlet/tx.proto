syntax = "proto3";

package saga.chainlet;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "saga/chainlet/params.proto";

option go_package = "github.com/sagaxyz/saga-sdk/x/chainlet/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  
  // Since: cosmos-sdk 0.47
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc SendUpgrade  (MsgSendUpgrade ) returns (MsgSendUpgradeResponse );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                       "authority";
  option           (amino.name) = "saga/x/chainlet/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

message MsgSendUpgrade {
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;

  uint64 height = 5;
}

message MsgSendUpgradeResponse {}

