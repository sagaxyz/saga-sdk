syntax = "proto3";
package saga.assetctl.controller.v1; // Updated package name

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto"; // For cosmos.msg.v1.service
import "cosmos_proto/cosmos.proto";
import "saga/assetctl/controller/v1/assetctl.proto";

option go_package = "github.com/sagaxyz/saga-sdk/x/assetctl/controller/types";

// Msg defines the assetctl Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc RegisterAssets(MsgRegisterAssets) returns (MsgRegisterAssetsResponse);
  rpc UnregisterAssets(MsgUnregisterAssets) returns (MsgUnregisterAssetsResponse);
  rpc SupportAssets(MsgSupportAssets) returns (MsgSupportAssetsResponse);
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// AssetDetails defines the metadata for a single asset to be registered.
message AssetDetails {
  string ibc_denom = 1; // IBC denom on the hub chainlet
  string denom = 2; // Denom on the source chain
  string display_name = 3;
  string description = 4;
  repeated DenomUnit denom_units = 5 [(gogoproto.nullable) = false];
}

message MsgRegisterAssets {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // Signer (e.g., ICA address or Hub governance address)
  string channel_id = 2;
  repeated AssetDetails assets_to_register = 3 [(gogoproto.nullable) = false];
}

message MsgRegisterAssetsResponse {}

message MsgUnregisterAssets {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // Signer (e.g., ICA address or Hub governance address)
  string channel_id = 2;
  repeated string ibc_denoms = 3;
}

message MsgUnregisterAssetsResponse {}

message MsgSupportAssets {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string channel_id = 2;
  repeated string ibc_denoms = 3;
}

message MsgSupportAssetsResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Params params = 2;
}

message MsgUpdateParamsResponse {}